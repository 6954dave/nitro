<?xml version="1.0" encoding="utf-8"?>
<project name="nitf" basedir="." default="build">

    <target name="init">
        <property name="object-dir" location="target/classes"/>
        <property name="target.dir" location="target"/>

        <mkdir dir="${object-dir}"/>
        <mkdir dir="${target.dir}"/>
        <loadproperties srcFile="project.properties"/>

        <!-- some defaults here -->
        <property name="nitf.dir" location="../../c/nitf/"/>
        <property name="jni.dir" location="../../c/nitf.jni/"/>
        <property name="jni.gnu" value=""/>
        <property name="jni.debug" value=""/>
        <property name="prefix" value="${target.dir}/nitro-java-${version}"/>
        <condition property="isWindows">
            <os family="windows"/>
        </condition>
    </target>


    <target name="clean" depends="init">
        <echo>"====================================================="</echo>
        <echo>"                        CLEAN                        "</echo>
        <echo>"====================================================="</echo>
        <delete dir="${object-dir}"/>
        <delete dir="${target.dir}"/>
        <delete dir="${javadoc-dir}"/>
        <delete dir="${javadoc-dir}"/>
    </target>


    <target name="compile" depends="init">
        <echo>"====================================================="</echo>
        <echo>"                       COMPILE                       "</echo>
        <echo>"====================================================="</echo>
        <javac srcdir="${src.dir}" destdir="${object-dir}"
            failonerror="yes" fork="true"/>
    </target>


    <target name="tests" depends="build">
        <echo>"====================================================="</echo>
        <echo>"                        TESTS                        "</echo>
        <echo>"====================================================="</echo>
        <javac srcdir="${test.dir}"
            destdir="${object-dir}"
            classpath="${object-dir}"
            failonerror="yes" fork="true"/>
    </target>


    <target name="_jni-nonwin" depends="init" unless="isWindows">
        <condition property="jni.debug" value="--enable-debugging">
            <istrue value="${debug}"/>
        </condition>

        <condition property="jni.gnu" value="--enable-gnu">
            <istrue value="${gnu}"/>
        </condition>

        <exec dir="${jni.dir}" executable="sh">
            <arg line="configure --prefix=${prefix} ${jni.debug} ${jni.gnu}"/>
        </exec>
        <exec dir="${jni.dir}" executable="make"/>
    </target>
    
    
    <target name="_install-nonwin" depends="init,build" unless="isWindows">
        <exec dir="${jni.dir}" executable="make">
            <arg line="install"/>
        </exec>
    </target>
    
    <target name="_jni-win" depends="init" if="isWindows">
        <condition property="jni.debug" value="debug=1">
            <istrue value="${debug}"/>
        </condition>
        <exec dir="${jni.dir}" executable="cmd.exe">
            <arg line="/c scons prefix=${prefix} ${jni.debug}"/>
        </exec>
    </target>
    
    <target name="_install-win" depends="init,build" if="isWindows">
        <exec dir="${jni.dir}" executable="cmd.exe">
            <arg line="/c scons prefix=${prefix} ${jni.debug} install"/>
        </exec>
    </target>
    
    <target name="jni">
        <echo>"====================================================="</echo>
        <echo>"                        JNI                          "</echo>
        <echo>"====================================================="</echo>
        <antcall target="_jni-win"/>
        <antcall target="_jni-nonwin"/>
        <copy todir="${target.dir}">
            <mapper type="flatten"/>
            <fileset dir="${jni.dir}" includes="lib/**/*.dll,lib/**/*.so"/>
        </copy> 
    </target>
    
    
    <target name="build" depends="compile,jni">
        <echo>"====================================================="</echo>
        <echo>"                        BUILD                        "</echo>
        <echo>"====================================================="</echo>
        <jar basedir="${object-dir}" destfile="${target.dir}/${projectName}-${version}.jar"/>
    </target>

    
    <target name="install" depends="init">
        <antcall target="_install-win"/>
        <antcall target="_install-nonwin"/>
        <copy todir="${prefix}/lib">
            <fileset dir="${target.dir}" includes="${projectName}-${version}.jar"/>
        </copy>
        <copy todir="${prefix}/shared">
            <mapper type="flatten"/>
            <fileset dir="${nitf.dir}/plugins" includes="**/*.dll,**/*.so"/>
        </copy>
    </target>

    <target name="dist" depends="build">
        <antcall target="javadoc"/>
        
        <!-- this little chunk gets the system identifier, as provided by config.guess or SCons -->
        <path id="lib.path">
            <fileset dir="${jni.dir}" includes="lib/**/*.dll,lib/**/*.so"/>
        </path>
        <property name="temp.1" refid="lib.path"/>
        <dirname property="temp.2" file="${temp.1}"/>
        <basename property="sysid" file="${temp.2}"/>
        
        <basename property="prefixBase" file="${prefix}"/>
        
        <property name="dist.name" value="${prefixBase}-${sysid}"/>
        <property name="dist.dir" value="${target.dir}/dist/${dist.name}"/>
        
        <copy todir="${dist.dir}/lib">
            <mapper type="flatten"/>
            <fileset dir="${jni.dir}" includes="lib/**/*.dll,lib/**/*.so"/>
        </copy>
        <copy todir="${dist.dir}/lib">
            <fileset dir="${target.dir}" includes="${projectName}-${version}.jar"/>
        </copy>
        <copy todir="${dist.dir}/shared">
            <mapper type="flatten"/>
            <fileset dir="${nitf.dir}/plugins" includes="**/*.dll,**/*.so"/>
        </copy>
        
        <copy todir="${dist.dir}/docs/api">
            <fileset dir="${javadoc.dir}" includes="**"/>
        </copy>
        
        <tar tarfile="${target.dir}/${dist.name}.tar" basedir="${target.dir}/dist" includes="${dist.name}/**"/>
        <gzip zipfile="${target.dir}/${dist.name}.tar.gz" src="${target.dir}/${dist.name}.tar"/>
        
        <delete file="${target.dir}/${dist.name}.tar"/>
        <delete dir="${target.dir}/dist"/>
        
    </target>
    

    <target name="javadoc" depends="init">
        <echo>"====================================================="</echo>
        <echo>"                       JAVADOC                       "</echo>
        <echo>"====================================================="</echo>
        <!--get the current timestamp-->
        <tstamp>
            <format property="touch.time" pattern="MM/dd/yyyy hh:mm:ss aa"/>
        </tstamp>

        <javadoc packagenames="nitf.*"
            sourcepath="${src.dir}"
            defaultexcludes="yes"
            destdir="${javadoc.dir}"
            author="true"
            version="true"
            use="true"
            windowtitle="NITRO API">

            <bottom><![CDATA[<i>Copyright &#169; 2004-2008 General Dynamics All Rights Reserved.</i>]]></bottom>
            <footer><![CDATA[<b>Created: ${touch.time}</b>]]></footer>
            <tag name="todo" scope="all" description="To do:"/>
        </javadoc>
    </target>


</project>
